class LinkedList {
   Node head;
   Node tail;
   
   public LinkedList() {
      head=null;
      tail=null;
   }
   
   public boolean isEmpty() {
      if(head==null && tail==null)
         return true;
      else
         return false;
   }
   
   public void addToHead(int item) {
      if(isEmpty()) {
         Node newNode = new Node(null, item, null);
         head=tail=newNode;
      } else{
            Node newNode = new Node(null, item, head);
            head=newNode;
            head.next.previous=head;
      }
   }
   
   public void addToTail(int item) {
      if(isEmpty()) {
         Node newNode = new Node(null, item, null);
         head=tail=newNode;
      } else{
            Node newNode = new Node(tail, item, null);
            tail=newNode;
            tail.previous.next=tail;
      }
   }
   
   public void printForward() {
      System.out.println("Forward:");
      Node current;
      current=head;
      while (current!=null) {
         System.out.println(current.item);
         current=current.next;
      }
   }
   
    public void printBackward() {
      System.out.println("Backward:");
      Node current;
      current=tail;
      while (current!=null) {
         System.out.println(current.item);
         current=current.previous;
      }
   }
   
   
   
}
